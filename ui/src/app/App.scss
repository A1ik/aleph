$icon-font-path: "~@blueprintjs/core/resources/icons";

@import "~@blueprintjs/core/src/blueprint.scss";
@import "./variables.scss";

html {
  height: 100%;
}

body {
  margin: 0;
  padding: 0;
  font-family: $pt-font-family;
  font-weight: 300;
  font-size: $aleph-font-size;
  background-color: $aleph-body-background;
}

.pt-navbar a {
  color: inherit;

  &:hover { 
    color: inherit;
    text-decoration: none;
  }
}

h1, h2, h3, h4, h5 {
  font-weight: 300;
}

pre {
  border: none;
  background-color: inherit;
  box-shadow: none;
  white-space: pre-wrap;
  white-space: -moz-pre-wrap;
  word-wrap: break-word;
}

.small-screen {
  max-width: 400px;
  margin: 0 auto;
  padding: ($aleph-grid-size * 2);

  h2 {
    line-height: inherit;
  }
}


// Used to render failed imports, missing connections.
.PartialError {
  .pt-non-ideal-state {
    min-height: 30vh;
  }
}

// Table defaults
table.pt-table {
  width: 100%;
}

td.numeric {
  text-align: right;

  span {
    float: right;
  }
}

td.tiny, th.tiny {
  width: 1%;
}

table.info-sheet {
  width: 100%;
  table-layout: auto;
  border-collapse: collapse;
  border-spacing: 0;

  th {
    font-weight: normal;
    color: $aleph-greyed-text;
    white-space: nowrap;
    padding-right: $aleph-grid-size;
  }

  td {
    width: 100%;
    overflow: hidden;
    overflow-wrap: break-word;
    word-break: break-all;
  }

  td.hide-overflow {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow-wrap: normal;
    word-break: normal;
  }
}

table.info-rank {
  width: 100%;
  table-layout: auto;
  border-spacing: 0;

  th {
    font-weight: normal;
    padding-left: 0;
    margin-left: 0;
    width: 100%;

    i {
      padding-right: $aleph-grid-size * 2;
    }
  }

  td.numeric {
    color: $aleph-greyed-text;
  }
}