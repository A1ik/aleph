version: "2"

services:
  postgres:
    image: postgres:10.0
    volumes:
      - "./build/data/postgres:/var/lib/postgresql/data"
      - "./build/logs/postgres:/var/log"
    environment:
      POSTGRES_USER: aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.0.0
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - elasticsearch-log:/var/log

  rabbitmq:
    image: rabbitmq
    volumes:
      - "./build/data/rabbitmq:/var/lib/rabbitmq"
      - "./build/logs/rabbitmq:/var/log"

  unoservice:
    image: alephdata/unoservice
    tmpfs: /tmp
    restart: on-failure
    expose:
      - 3000

  worker:
    build: ../
    command: celery -A aleph.queues -B -c 4 -l INFO worker --pidfile /var/lib/celery.pid
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - unoservice
    volumes:
      - "./build/logs/worker:/var/log"
      - "./build/archive:/archive"
      - "./build/incoming:/incoming"
      - "./build/polyglot:/polyglot"
      - "./build/tmp/worker:/tmp"
    environment:
      C_FORCE_ROOT: 'true'
      ALEPH_ELASTICSEARCH_URI: http://elasticsearch:9200/
      ALEPH_DATABASE_URI: postgresql://aleph:aleph@postgres/aleph
      ALEPH_BROKER_URI: amqp://guest:guest@rabbitmq:5672
      ALEPH_ARCHIVE_PATH: /archive
      POLYGLOT_DATA_PATH: /polyglot
      UNOSERVICE_URL: http://unoservice:3000/convert
      ALEPH_DEBUG: 'True'
    env_file:
      - aleph.env

  web:
    build: ../
    command: gunicorn -w 5 -b 0.0.0.0:8000 --log-level info --log-file /var/log/gunicorn.log aleph.manage:app
    expose:
      - 8000
    ports:
      - "8000:8000"
    links:
      - postgres
      - elasticsearch
      - rabbitmq
      - unoservice
    volumes:
      - "./build/logs/web:/var/log"
      - "./build/archive:/archive"
      - "./build/polyglot:/polyglot"
    environment:
      ALEPH_ELASTICSEARCH_URI: http://elasticsearch:9200/
      ALEPH_DATABASE_URI: postgresql://aleph:aleph@postgres/aleph
      ALEPH_BROKER_URI: amqp://guest:guest@rabbitmq:5672
      ALEPH_ARCHIVE_PATH: /archive
      POLYGLOT_DATA_PATH: /polyglot
      UNOSERVICE_URL: http://unoservice:3000/convert
      ALEPH_DEBUG: 'True'
    env_file:
      - aleph.env

  memorious:
    build: ../path/to/memorious/
    command: /bin/bash
    links:
      - web
    volumes:
      - "/path/to/memorious:/srv/memorious" 
      - "/path/to//crawlers:/srv/crawlers" 
    environment:
      MEMORIOUS_CONFIG_PATH: '/srv/crawlers'
      MEMORIOUS_BASE_PATH: 'data'
      MEMORIOUS_DEBUG: 'true'
      MEMORIOUS_EAGER: 'true'
      MEMORIOUS_INCREMENTAL: 'true'
      MEMORIOUS_ARCHIVE_TYPE: 'file'
      MEMORIOUS_ARCHIVE_PATH: 'archive'
      TESSDATA_PREFIX: '/usr/share/tesseract-ocr'
      MEMORIOUS_ALEPH_HOST: http://web:8000/
      MEMORIOUS_ALEPH_API_KEY: abc123

volumes:
  elasticsearch-data: {}
  elasticsearch-log: {}