@import "~@blueprintjs/core/dist/variables";

// Overrides some .pt-dialog CSS
.search-filter-collections.pt-dialog {
  bottom: $pt-grid-size;
  width: calc(100% - #{$pt-grid-size * 4});
  padding: $pt-grid-size 0;
  flex-direction: row;
  background-color: $white;
}

.search-filter-collections-col {
  display: flex;
  flex-direction: column;
  height: 100%;

  &:first-child {
    flex: 1;
  }

  &:last-child {
    border-left: 2px solid $light-gray2;
    width: 300px;
  }
}

.search-filter-collections-col__row,
.search-filter-collections-col__flex-row {
  margin: $pt-grid-size ($pt-grid-size * 2);
}

.search-filter-collections-col__flex-row {
  flex: 1;
  overflow: auto;
}

.search-filter-collections-list {
  list-style: none;
  margin: 0;
  padding: 0;

  & > li {
    position: relative;
    cursor: pointer;
    padding: $pt-grid-size $pt-grid-size 0 ($pt-grid-size * 2 + 16px);
    overflow: auto;
    width: 100%;

    &::before {
      content: "";
      position: absolute;
      top: $pt-grid-size;;
      left: $pt-grid-size;
      background-image: url(./icons/collection.svg);
      width: 16px;
      height: 16px;
    }

    &:nth-child(odd) {
      background: $light-gray4;
    }

    &:hover {
      background-color: $gray5;
    }
  }
}

.search-filter-collections-facet {
  list-style: none;
  margin: 0;
  padding: ($pt-grid-size / 2) 0;

  & > li {
    position: relative;
    cursor: pointer;
    padding: ($pt-grid-size / 2) $pt-grid-size;
    padding-left: ($pt-icon-size-standard + $pt-grid-size * 2);

    & > .pt-icon-standard {
      position: absolute;
      left: $pt-grid-size;
      top: ($pt-grid-size / 2);
      line-height: $pt-line-height;
    }

    &:hover {
      background-color: $gray5;
    }
  }
}
